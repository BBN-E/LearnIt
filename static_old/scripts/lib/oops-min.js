if(!Function.prototype.toSource){Function.prototype.toSource=function(){return"("+this.toString()+")"}}Function.prototype.impls=function(c){var f=new this();for(var d=0,b=arguments.length;d<b;d++){var e=arguments[d];for(var a in e){if(a&&!e[a]._isEmpty()){throw ("Interface method "+a+" should not have body.")}if(a&&a!="_super"&&a!="impls"&&a!="inherits"&&typeof(e[a])!=typeof(f[a])){throw (this.toSource()+" does not implement '"+a+"'")}if(typeof(e[a])==="function"&&e[a].arity!==f[a].arity){throw (this.toSource()+" does not implement proper '"+a+"'. Should have '"+e[a].arity+"' argument(s) but found '"+f[a].arity+"'")}}}delete f;return this};Function.prototype._isEmpty=function(){var a=this.toSource().replace(/[ \t\n]+/," ");if(a){a=a.replace(/\s*\(function\s*(\w+)?\s*\([ \t\w]*\)[ \t]*\{[ \t\r\n]*\}\s*\)/img,"");if(a.length>0){return false}}return true};Function.prototype.isAbstract=function(){if(!this._isEmpty()){throw ("Abstract method should not have body.")}this._abstract=true;return this};Function.prototype.isFinal=function(){this._final=true;return this};Function.prototype.inherits=function(parentClass){if(parentClass._final){throw ("Final class can't be inherited.")}var removeAbstractMethod=function(m,op,parentProps){var rgxp=new RegExp("this."+m+" = .*isAbstract().*(this.w+s*=)?","igm");parentProps=parentProps.replace(rgxp,"$1");return parentProps};var op=new parentClass();var oo=new this();var parentProps=parentClass.toString().replace(/\\s+|}$/ig," ");if(parentProps.indexOf("[native code]")>0){return this.inheritsNative(parentClass)}var childProps=this.toString().replace(/function\s*(\w+)?\(\)\s*{|\\s+/," ");var _s="_s$s_";var d=Function.depth===undefined?(Function.depth=0):(Function.depth=Function.depth+1);_s+=d;if(this._inherited){throw ("Multiple inheritance not allowed.")}for(m in op){if(oo[m]===undefined){if(op[m]._abstract){throw ("Method '"+m+"' is abstract in parent class. Child class MUST override it.")}var rgx=new RegExp("_super\\.("+m+")s*(())","ig");childProps=childProps.replace(rgx,"((typeof(this.$1) !== 'undefined') ? this.$1$2 : $1$2)");continue}if(op[m]._abstract){parentProps=removeAbstractMethod(m,op,parentProps)}if(op[m]._final){throw ("Method '"+m+"' is final in parent class. Child class CAN'T override it.")}parentProps=parentProps.replace("this."+m,"this."+_s+m).replace(/[ \r\n\t]+$/igm,"");childProps=childProps.replace("this._super","_super").replace("_super."+m,"this."+_s+m)}var rgx=/_super.(\w+)/ig;childProps=childProps.replace(rgx,"$1");newObjectProps="("+parentProps+childProps+".add$Proto())";return eval(newObjectProps)};Function.prototype.inheritsNative=function(nativeClass){var s=nativeClass.toString().replace(/[\n\t ]/igm," ").replace(/.*function\s*(\w+).*/igm,"$1");var source=this.toString().replace(/\\s+/ig," ").replace(/function\s*(\w+)?\(\)\s*{/igm,"");source="(function(){var _super = this._super = new "+s+"();"+source+".add$Proto())";source=source.replace(/_super\.(\w+)\s*\(/igm,"_super.$1.call(this,");return eval(source)};Function.prototype.inheritsProto=function(b){var a=this;this.prototype=new b();this.prototype.constructor=a;this.prototype._super=new b();return this};Function.prototype.add$Proto=function(){var a=new this();if(a._super){this.prototype=a._super}this._inherited=true;return this};